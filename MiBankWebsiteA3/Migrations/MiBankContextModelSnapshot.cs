// <auto-generated />
using System;
using MiBankWebsiteA2.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace MiBankWebsiteA3.Migrations
{
    [DbContext(typeof(MiBankContext))]
    partial class MiBankContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("MiBankWebsiteA2.Models.Account", b =>
                {
                    b.Property<int>("AccountNumber")
                        .HasColumnType("int");

                    b.Property<int>("AccountType")
                        .HasColumnType("int");

                    b.Property<decimal>("Balance")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("CustomerID")
                        .HasColumnType("int");

                    b.Property<DateTime>("LastModified")
                        .HasColumnType("datetime2");

                    b.HasKey("AccountNumber");

                    b.HasIndex("CustomerID");

                    b.ToTable("Accounts");

                    b.HasCheckConstraint("CH_Account_Balance", "Balance >= 0");

                    b.HasCheckConstraint("CH_Account_CustomerID", "len(CustomerID) = 4");
                });

            modelBuilder.Entity("MiBankWebsiteA2.Models.BillPay", b =>
                {
                    b.Property<int>("BillPayID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasMaxLength(4)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AccountNumber")
                        .IsRequired()
                        .HasColumnType("int")
                        .HasMaxLength(4);

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)")
                        .HasMaxLength(8);

                    b.Property<bool>("Blocked")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<int>("PayPeriod")
                        .HasColumnType("int");

                    b.Property<int?>("PayeeID")
                        .HasColumnType("int")
                        .HasMaxLength(4);

                    b.Property<DateTime>("ScheduleDate")
                        .HasColumnType("datetime2");

                    b.HasKey("BillPayID");

                    b.HasIndex("AccountNumber");

                    b.HasIndex("PayeeID");

                    b.ToTable("BillPays");
                });

            modelBuilder.Entity("MiBankWebsiteA2.Models.Customer", b =>
                {
                    b.Property<int>("CustomerID")
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(40)")
                        .HasMaxLength(40);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(15)")
                        .HasMaxLength(15);

                    b.Property<int>("PostCode")
                        .HasColumnType("int");

                    b.Property<string>("State")
                        .HasColumnType("nvarchar(3)")
                        .HasMaxLength(3);

                    b.Property<string>("TFN")
                        .HasColumnType("nvarchar(11)")
                        .HasMaxLength(11);

                    b.HasKey("CustomerID");

                    b.ToTable("Customers");

                    b.HasCheckConstraint("CH_Customer_CustomerID", "len(CustomerID) = 4");

                    b.HasCheckConstraint("CH_Customer_Name", "len(Name) <= 50");

                    b.HasCheckConstraint("CH_Customer_FTN", "len(TFN) <= 11");

                    b.HasCheckConstraint("CH_Customer_Address", "len(Address) <= 50");

                    b.HasCheckConstraint("CH_Customer_City", "len(City) <= 40");

                    b.HasCheckConstraint("CH_Customer_Phone", "len(Phone) <= 15");
                });

            modelBuilder.Entity("MiBankWebsiteA2.Models.Login", b =>
                {
                    b.Property<int>("LoginID")
                        .HasColumnType("int")
                        .HasMaxLength(8);

                    b.Property<int>("CustomerID")
                        .HasColumnType("int");

                    b.Property<bool>("Locked")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifyDate")
                        .HasColumnType("datetime2")
                        .HasMaxLength(8);

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("LoginID");

                    b.HasIndex("CustomerID");

                    b.ToTable("Logins");

                    b.HasCheckConstraint("CH_Login_LoginID", "len(LoginID) = 8");

                    b.HasCheckConstraint("CH_Login_PasswordHash", "len(PasswordHash) = 64");

                    b.HasCheckConstraint("CH_Login_CustomerID", "len(CustomerID) = 4");
                });

            modelBuilder.Entity("MiBankWebsiteA2.Models.Payee", b =>
                {
                    b.Property<int>("PayeeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasMaxLength(4)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(40)")
                        .HasMaxLength(40);

                    b.Property<int>("CustomerID")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PostCode")
                        .HasColumnType("int");

                    b.Property<string>("State")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PayeeID");

                    b.HasIndex("CustomerID");

                    b.ToTable("Payees");
                });

            modelBuilder.Entity("MiBankWebsiteA2.Models.Transaction", b =>
                {
                    b.Property<int>("TransactionID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasMaxLength(4)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AccountNumber")
                        .HasColumnType("int")
                        .HasMaxLength(4);

                    b.Property<decimal>("Amount")
                        .HasColumnType("Money")
                        .HasMaxLength(8);

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int?>("DestAccountNumber")
                        .HasColumnType("int")
                        .HasMaxLength(4);

                    b.Property<DateTime>("LastModified")
                        .HasColumnType("datetime2")
                        .HasMaxLength(8);

                    b.Property<DateTime>("TransactionTimeUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("TransactionType")
                        .HasColumnType("int");

                    b.HasKey("TransactionID");

                    b.HasIndex("AccountNumber");

                    b.HasIndex("DestAccountNumber");

                    b.ToTable("Transactions");

                    b.HasCheckConstraint("CH_Transaction_Comment", "Len(Comment) <= 50");
                });

            modelBuilder.Entity("MiBankWebsiteA2.Models.Account", b =>
                {
                    b.HasOne("MiBankWebsiteA2.Models.Customer", "Customer")
                        .WithMany("Accounts")
                        .HasForeignKey("CustomerID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MiBankWebsiteA2.Models.BillPay", b =>
                {
                    b.HasOne("MiBankWebsiteA2.Models.Account", "Account")
                        .WithMany("BillPays")
                        .HasForeignKey("AccountNumber")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MiBankWebsiteA2.Models.Payee", "Payee")
                        .WithMany("Billpays")
                        .HasForeignKey("PayeeID");
                });

            modelBuilder.Entity("MiBankWebsiteA2.Models.Login", b =>
                {
                    b.HasOne("MiBankWebsiteA2.Models.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MiBankWebsiteA2.Models.Payee", b =>
                {
                    b.HasOne("MiBankWebsiteA2.Models.Customer", "Customer")
                        .WithMany("Payees")
                        .HasForeignKey("CustomerID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MiBankWebsiteA2.Models.Transaction", b =>
                {
                    b.HasOne("MiBankWebsiteA2.Models.Account", "Account")
                        .WithMany("Transactions")
                        .HasForeignKey("AccountNumber")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MiBankWebsiteA2.Models.Account", "DestAccount")
                        .WithMany()
                        .HasForeignKey("DestAccountNumber");
                });
#pragma warning restore 612, 618
        }
    }
}
